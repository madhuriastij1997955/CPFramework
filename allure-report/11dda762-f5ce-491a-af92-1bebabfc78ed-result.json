{"name": "test_view_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_view_user.Test_view_user testMethod=test_view_user>\n\n    @pytest.mark.smoke\n    @pytest.mark.order(6)\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_view_user(self):\n        loginpage = loginData(self.driver)\n        loginpage.user_login(self.uname, self.pwd)\n        usermgt=UserManagement_data(self.driver)\n        usermgt.view_user_details(\"5tuwzm7yxc@mailinator.com\")\n>       loginpage.logout_app()\n\nTestCases\\UserManagement\\test_view_user.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\LoginPage.py:131: in logout_app\n    self.javascripit_click(self.logout_icon)\nUtilities\\BaseClass.py:69: in javascripit_click\n    web_ele = exp_wait.until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8023a02d-adf4-4213-b496-4bb036ca7f57\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001F5AF8C5760>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\mjasti\\PycharmProjects\\CP StarterKIT Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1692876610613, "stop": 1692876681747, "uuid": "53b681e6-e9a2-4c81-9186-787975ae28a8", "historyId": "088550632af75a8771ad26fb217b0081", "testCaseId": "088550632af75a8771ad26fb217b0081", "fullName": "TestCases.UserManagement.test_view_user.Test_view_user#test_view_user", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "order(6)"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "TestCases.UserManagement"}, {"name": "suite", "value": "test_view_user"}, {"name": "subSuite", "value": "Test_view_user"}, {"name": "host", "value": "ENCDAPHYDLT0374"}, {"name": "thread", "value": "8480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.UserManagement.test_view_user"}]}