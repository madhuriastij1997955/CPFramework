{"name": "test_add_users", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_add_users.Test_Add_users testMethod=test_add_users>\n\n    @pytest.mark.smoke\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.order(3)\n    def test_add_users(self):\n        add_users = UserManagement_data(self.driver)\n>       add_users.add_user(add_users.users_list)\n\nTestCases\\UserManagement\\test_add_users.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObjects\\UserManagement.py:132: in add_user\n    add_users.registration_link(Security_QAs.QA3, Security_QAs.QA5, Security_QAs.Ans1, Security_QAs.Ans2,\nPageObjects\\User_Registration_Link.py:209: in registration_link\n    login.logout_app()\nPageObjects\\LoginPage.py:131: in logout_app\n    self.javascripit_click(self.logout_icon)\nUtilities\\BaseClass.py:69: in javascripit_click\n    web_ele = exp_wait.until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b36b5243-d731-43f7-a3bd-1cbe124f85bd\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001F5AF8C6FC0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\mjasti\\PycharmProjects\\CP StarterKIT Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1692876258836, "stop": 1692876348597, "uuid": "4476aa51-890e-4098-aa71-3a89c63925fe", "historyId": "ff0edcb702423595fb2f4d82476a6473", "testCaseId": "ff0edcb702423595fb2f4d82476a6473", "fullName": "TestCases.UserManagement.test_add_users.Test_Add_users#test_add_users", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "order(3)"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "TestCases.UserManagement"}, {"name": "suite", "value": "test_add_users"}, {"name": "subSuite", "value": "Test_Add_users"}, {"name": "host", "value": "ENCDAPHYDLT0374"}, {"name": "thread", "value": "8480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.UserManagement.test_add_users"}]}